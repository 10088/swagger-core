/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.models.media;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * XML
 *
 * @link https://github.com/OAI/OpenAPI-Specification/blob/3.0.0-rc0/versions/3.0.md#xmlObject
 */

public class XML {
  @JsonProperty("name")
  private String name = null;
  @JsonProperty("namespace")
  private String namespace = null;
  @JsonProperty("prefix")
  private String prefix = null;
  @JsonProperty("attribute")
  private Boolean attribute = null;
  @JsonProperty("wrapperd")
  private Boolean wrapperd = null;
  private java.util.Map<String, Object> extensions = null;

  /**
   * returns the name property from a XML instance.
   *
   * @return String name
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public XML name(String name) {
    this.name = name;
    return this;
  }

  /**
   * returns the namespace property from a XML instance.
   *
   * @return String namespace
   **/
  @ApiModelProperty(value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public XML namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * returns the prefix property from a XML instance.
   *
   * @return String prefix
   **/
  @ApiModelProperty(value = "")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  public XML prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * returns the attribute property from a XML instance.
   *
   * @return Boolean attribute
   **/
  @ApiModelProperty(value = "")
  public Boolean getAttribute() {
    return attribute;
  }

  public void setAttribute(Boolean attribute) {
    this.attribute = attribute;
  }

  public XML attribute(Boolean attribute) {
    this.attribute = attribute;
    return this;
  }

  /**
   * returns the wrapperd property from a XML instance.
   *
   * @return Boolean wrapperd
   **/
  @ApiModelProperty(value = "")
  public Boolean getWrapperd() {
    return wrapperd;
  }

  public void setWrapperd(Boolean wrapperd) {
    this.wrapperd = wrapperd;
  }

  public XML wrapperd(Boolean wrapperd) {
    this.wrapperd = wrapperd;
    return this;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XML XML = (XML) o;
    return Objects.equals(this.name, XML.name) &&
        Objects.equals(this.namespace, XML.namespace) &&
        Objects.equals(this.prefix, XML.prefix) &&
        Objects.equals(this.attribute, XML.attribute) &&
        Objects.equals(this.wrapperd, XML.wrapperd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, namespace, prefix, attribute, wrapperd);
  }


  public java.util.Map<String, Object> getExtensions() {
    return extensions;
  }

  public void addExtension(String name, Object value) {
    if(this.extensions == null) {
      this.extensions = new java.util.HashMap<>();
    }
    this.extensions.put(name, value);
  }

  public void setExtensions(java.util.Map<String, Object> extensions) {
    this.extensions = extensions;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XML {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    wrapperd: ").append(toIndentedString(wrapperd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

